# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms

on:
    push:
        branches: ["main"]
    pull_request:
        branches: ["main"]

jobs:
    build:
        runs-on: ${{ matrix.os }}

        strategy:
            # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
            fail-fast: false

            matrix:
                os: [ubuntu-latest, windows-latest]
                build_type: [Release]
                include:
                    - os: windows-latest
                      cpp_compiler: cl
                    - os: ubuntu-latest
                      cpp_compiler: g++

        steps:
            - uses: actions/checkout@v4

            - name: Set reusable strings
              # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
              id: strings
              shell: bash
              run: |
                  echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

            - uses: lukka/get-cmake@latest
            - name: run-vcpkg
              uses: lukka/run-vcpkg@v11

            - name: Run CMake consuming CMakePreset.json and run vcpkg to build packages
              uses: lukka/run-cmake@v10
              with:
                  configurePreset: "github"
                  buildPreset: "github"

            - name: Build
              # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
              run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}
